@page "/patient/{Id}"
@using FhirBlaze.SharedComponents.SMART
@using Hl7.Fhir.Model;
@using Newtonsoft.Json
@inject NavigationManager UriHelper
@inject SmartLauncher Launcher
@inject IFhirService fhirService
<div class="container">
    <h3>Patient Detail</h3>
    <div class="card border-primary mb-6">
        <h5 class="card-header">
            @CurrentPatient.Name?.FirstOrDefault() - (@CurrentPatient.Gender)
        </h5>
        <div class="card-body">
            <p class="card-text">
                <dl class="row">
                    <dt class="col-sm-3">Address:</dt>
                    <dd class="col-sm-9"><AddressDisplay Address="@CurrentPatient.Address?.FirstOrDefault()" /></dd>

                    <dt class="col-sm-3">Phone:</dt>
                    <dd class="col-sm-9">@CurrentPatient.Telecom?.FirstOrDefault(t => t.System == ContactPoint.ContactPointSystem.Phone)?.Value</dd>

                    <dt class="col-sm-3">Date of Birth:</dt>
                    <dd class="col-sm-9">@CurrentPatient.BirthDate</dd>

                    <dt class="col-sm-3 text-truncate">E-mail:</dt>
                    <dd class="col-sm-9">@CurrentPatient.Telecom?.FirstOrDefault(e => e.System == ContactPoint.ContactPointSystem.Email)?.Value</dd>
                </dl>
            </p>
            <button type="button" class="btn btn-primary">Active: @CurrentPatient.Active</button>
            <a class="btn btn-primary" target="_blank" href="@ChestistLaunchUrl">Truity Provider</a>
            <button type="button" class="btn btn-primary" @onclick="LaunchQuestionnaire">Take Survey</button>
        </div>
    </div>
    <div class="mb-6">
        <h3>Observations: @PatientObservations.Count</h3>
        @foreach (var o in PatientObservations)
        {
            <ObservationDisplay Observation="o" />
        }
    </div>
    <div class="mb-6">
        <h3>Procedures: @PatientProcedures.Count</h3>
        @foreach (var o in PatientProcedures)
        {
            <ProcedureDisplay Procedure="o" />
        }
    </div>
    <div class="mb-6">
        <h3>Conditions: @PatientConditions.Count</h3>
        @foreach (var o in PatientConditions)
        {
            <ConditionDisplay Condition="o" />
        }
    </div>
    <div class="mb-6">
        <h3>MedicationRequests: @PatientMedicationRequests.Count</h3>
        @foreach (var o in PatientMedicationRequests)
        {
            <MedicationRequestDisplay MedicationRequest="o" />
        }
    </div>
</div>


@code {

    [Parameter]
    public string Id { get; set; }

    public string ChestistLaunchUrl { get; set; }
    public IList<Observation> PatientObservations { get; set; } = new List<Observation>();
    public IList<Procedure> PatientProcedures { get; set; } = new List<Procedure>();
    public IList<Condition> PatientConditions { get; set; } = new List<Condition>();
    public IList<MedicationRequest> PatientMedicationRequests { get; set; } = new List<MedicationRequest>();
    public Patient CurrentPatient { get; set; } = new Patient();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        CurrentPatient = await fhirService.GetResourceByIdAsync<Patient>(Id);
        var ctx = new
        {
            patient = CurrentPatient.Id
        };
        ChestistLaunchUrl = Launcher.GetLaunchUrl(JsonConvert.SerializeObject(ctx));

        PatientObservations = await fhirService.GetPatientObservations(ctx.patient);
        PatientProcedures = await fhirService.GetPatientProcedures(ctx.patient);
        PatientConditions = await fhirService.GetPatientConditions(ctx.patient);
        PatientMedicationRequests = await fhirService.GetPatientMedicationRequests(ctx.patient);
    }

    public void LaunchClick()
    {
        var ctx = new
        {
            patient = CurrentPatient.Id
        };
        var href = Launcher.GetLaunchUrl(JsonConvert.SerializeObject(ctx));
        UriHelper.NavigateTo(href);
    }

    public void LaunchQuestionnaire()
    {

    }
}
